{"version":3,"sources":["components/Header.js","components/Grid.js","factory/ships.js","factory/functions/ship-validation.js","factory/gameboard.js","factory/player.js","factory/game.js","components/App.js","index.js"],"names":["Header","Grid","props","gridX","gridY","idArray","x","length","y","push","className","map","letter","player","number","id","description","ship","firstSquare","direction","squares","i","hit","coordinate","isSunk","every","square","isShipInvalid","lastSquare","isShipOverlapping","ships","j","k","isShipAdjacent","generateValidSquares","validSquares","currentSquare","currentShip","gameboard","forEach","Math","floor","random","randomSquare","addShip","name","board","availablePlays","removeClassFromShips","document","querySelector","querySelectorAll","classList","remove","addClassToShips","add","playedSquare","getHit","playedDiv","removeAvailablePlay","splice","sunkAllShips","randomizeBoard","game","player1","player2","player2Divs","addInfoToDisplay","undefined","contains","addEventToDivs","gameStarted","div","addEventListener","gameRound","removeEventListener","infoDisplay","Number","slice","split","textContent","playAgainBtn","disabled","window","location","reload","App","useEffect","newGame","randomizeBtn","startGameBtn","type","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d2b0e029.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/Header.css\";\r\n\r\nfunction Header() {\r\n  return <header>BATTLESHIP</header>;\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"../styles/Grid.css\";\r\n\r\nfunction Grid(props) {\r\n  const gridX = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\r\n  const gridY = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\r\n  const gridCoordTop = [\"\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"];\r\n  const gridCoordLeft = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"];\r\n\r\n  let idArray = [];\r\n  for (let x = 0; x < gridX.length; x++) {\r\n    for (let y = 0; y < gridY.length; y++) {\r\n      idArray.push(gridX[x] + gridY[y]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Grid-container\">\r\n      <div className=\"Grid-coord-top\">\r\n        {gridCoordTop.map((letter) => {\r\n          return <div key={`${props.player}-coord-${letter}`}>{letter}</div>;\r\n        })}\r\n      </div>\r\n      <div className=\"Grid-coord-left\">\r\n        {gridCoordLeft.map((number) => {\r\n          return <div key={`${props.player}-coord-${number}`}>{number}</div>;\r\n        })}\r\n      </div>\r\n      <div className={`Grid ${props.player}`}>\r\n        {idArray.map((id) => {\r\n          return (\r\n            <div\r\n              key={`${props.player}-${id}`}\r\n              id={`${props.player}-${id}`}\r\n            ></div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"Grid-description\">{props.description}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n","function ship(length, firstSquare, direction = \"horizontal\") {\r\n  let squares = [];\r\n  for (let i = 0; i < length; i++) {\r\n    if (direction === \"horizontal\") {\r\n      squares.push({ x: firstSquare.x + i, y: firstSquare.y, hit: false });\r\n    } else {\r\n      squares.push({ x: firstSquare.x, y: firstSquare.y + i, hit: false });\r\n    }\r\n  }\r\n\r\n  function hit(coordinate) {\r\n    for (let i = 0; i < length; i++) {\r\n      if (squares[i].x === coordinate.x && squares[i].y === coordinate.y) {\r\n        squares[i].hit = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  function isSunk() {\r\n    return squares.every((square) => square.hit === true);\r\n  }\r\n\r\n  return { length, squares, hit, isSunk };\r\n}\r\n\r\nexport default ship;\r\n","import ship from \"../ships\";\r\n\r\nfunction generateValidSquares(length, ships, direction) {\r\n  const validSquares = [];\r\n\r\n  for (let y = 0; y < 10; y++) {\r\n    for (let x = 0; x < 10; x++) {\r\n      const currentSquare = { x, y };\r\n      const currentShip = ship(length, currentSquare, direction);\r\n\r\n      if (isShipInvalid(currentShip) === true) continue;\r\n      if (isShipOverlapping(currentShip.squares, ships) === true) continue;\r\n      if (isShipAdjacent(currentShip, ships) === true) continue;\r\n\r\n      validSquares.push(currentSquare);\r\n    }\r\n  }\r\n  return validSquares;\r\n}\r\n\r\nfunction isShipInvalid(ship) {\r\n  const lastSquare = ship.squares[ship.length - 1];\r\n\r\n  if (lastSquare.x > 9 || lastSquare.y > 9) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isShipOverlapping(squares, ships) {\r\n  for (let i = 0; i < squares.length; i++) {\r\n    for (let j = 0; j < ships.length; j++) {\r\n      for (let k = 0; k < ships[j].squares.length; k++) {\r\n        if (\r\n          squares[i].x === ships[j].squares[k].x &&\r\n          squares[i].y === ships[j].squares[k].y\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isShipAdjacent(ship, ships) {\r\n  function generateAdjacentSquares(square) {\r\n    return [\r\n      { x: square.x, y: square.y - 1 },\r\n      { x: square.x, y: square.y + 1 },\r\n      { x: square.x - 1, y: square.y },\r\n      { x: square.x + 1, y: square.y },\r\n      { x: square.x - 1, y: square.y - 1 },\r\n      { x: square.x - 1, y: square.y + 1 },\r\n      { x: square.x + 1, y: square.y - 1 },\r\n      { x: square.x + 1, y: square.y + 1 },\r\n    ];\r\n  }\r\n\r\n  for (let i = 0; i < ship.squares.length; i++) {\r\n    const adjacentSquares = generateAdjacentSquares(ship.squares[i]);\r\n    if (isShipOverlapping(adjacentSquares, ships)) return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default generateValidSquares;\r\nexport { isShipInvalid, isShipOverlapping, isShipAdjacent };\r\n","import ship from \"./ships\";\r\nimport generateValidSquares from \"./functions/ship-validation\";\r\n\r\nfunction gameboard() {\r\n  let ships = [];\r\n\r\n  function addShip(length) {\r\n    const direction =\r\n      Math.floor(Math.random() * 2) === 0 ? \"horizontal\" : \"vertical\";\r\n    const validSquares = generateValidSquares(length, ships, direction);\r\n\r\n    const randomSquare =\r\n      validSquares[Math.floor(Math.random() * validSquares.length)];\r\n\r\n    ships.push(ship(length, randomSquare, direction));\r\n  }\r\n\r\n  const shipsLength = [4, 3, 3, 2, 2, 2, 1, 1, 1, 1];\r\n  shipsLength.forEach((length) => addShip(length));\r\n\r\n  return { ships };\r\n}\r\n\r\nexport default gameboard;\r\n","import gameboard from \"./gameboard\";\r\n\r\nfunction player(name) {\r\n  let board = gameboard().ships;\r\n  let availablePlays = [];\r\n\r\n  for (let y = 0; y < 10; y++) {\r\n    for (let x = 0; x < 10; x++) {\r\n      availablePlays.push({ x, y });\r\n    }\r\n  }\r\n\r\n  function removeClassFromShips() {\r\n    const grid = document.querySelector(`.${name}`);\r\n    const gridShips = grid.querySelectorAll(\".ship\");\r\n    gridShips.forEach((ship) => {\r\n      ship.classList.remove(\"ship\");\r\n    });\r\n  }\r\n\r\n  function addClassToShips() {\r\n    board.forEach((ship) => {\r\n      ship.squares.forEach((square) => {\r\n        document\r\n          .querySelector(`#${name}-${square.x}${square.y}`)\r\n          .classList.add(\"ship\");\r\n      });\r\n    });\r\n  }\r\n  removeClassFromShips();\r\n  addClassToShips();\r\n\r\n  function randomizeBoard() {\r\n    removeClassFromShips();\r\n    board = gameboard().ships;\r\n    addClassToShips();\r\n  }\r\n\r\n  function removeAvailablePlay(playedSquare) {\r\n    for (let i = 0; i < availablePlays.length; i++) {\r\n      if (\r\n        playedSquare.x === availablePlays[i].x &&\r\n        playedSquare.y === availablePlays[i].y\r\n      ) {\r\n        availablePlays.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  function sunkAllShips() {\r\n    if (board.every((ship) => ship.isSunk() === true)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function getHit(playedSquare) {\r\n    const playedDiv = document.querySelector(\r\n      `#${name}-${playedSquare.x}${playedSquare.y}`\r\n    );\r\n    playedDiv.classList.add(\"hit\");\r\n\r\n    if (playedDiv.classList[0] === \"ship\") {\r\n      board.forEach((ship) => {\r\n        ship.hit(playedSquare);\r\n\r\n        if (ship.isSunk()) {\r\n          ship.squares.forEach((square) => {\r\n            document\r\n              .querySelector(`#${name}-${square.x}${square.y}`)\r\n              .classList.add(\"sunk\");\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return {\r\n    name,\r\n    board,\r\n    playedSquare: {},\r\n    availablePlays,\r\n    getHit,\r\n    removeAvailablePlay,\r\n    sunkAllShips,\r\n    randomizeBoard,\r\n  };\r\n}\r\n\r\nexport default player;\r\n","import player from \"./player\";\r\n\r\nfunction game() {\r\n  const player1 = player(\"player1\");\r\n  const player2 = player(\"player2\");\r\n\r\n  const player2Grid = document.querySelector(\".player2\");\r\n  const player2Divs = player2Grid.querySelectorAll(\"div\");\r\n\r\n  function addEventToDivs(gameStarted) {\r\n    player2Divs.forEach((div) => {\r\n      div.addEventListener(\"click\", function gameRound() {\r\n        if (!gameStarted) return;\r\n\r\n        if (player1.sunkAllShips() || player2.sunkAllShips()) {\r\n          div.removeEventListener(\"click\", gameRound);\r\n          return;\r\n        }\r\n\r\n        const infoDisplay = document.querySelector(\".info-display\");\r\n\r\n        //Player1 plays\r\n        player1.playedSquare = {\r\n          x: Number(div.id.slice(8).split(\"\")[0]),\r\n          y: Number(div.id.slice(8).split(\"\")[1]),\r\n        };\r\n\r\n        player1.removeAvailablePlay(player1.playedSquare);\r\n        player2.getHit(player1.playedSquare);\r\n        if (player2.sunkAllShips()) {\r\n          div.removeEventListener(\"click\", gameRound);\r\n          infoDisplay.textContent = addInfoToDisplay(player2.name);\r\n          const playAgainBtn = document.querySelector(\".play-again-btn\");\r\n          playAgainBtn.disabled = false;\r\n          playAgainBtn.addEventListener(\"click\", () => {\r\n            window.location.reload();\r\n            return false;\r\n          });\r\n          return;\r\n        }\r\n\r\n        //Player2 plays\r\n        player2.playedSquare =\r\n          player2.availablePlays[\r\n            Math.floor(Math.random() * player2.availablePlays.length)\r\n          ];\r\n\r\n        player2.removeAvailablePlay(player2.playedSquare);\r\n        player1.getHit(player2.playedSquare);\r\n        if (player1.sunkAllShips()) {\r\n          div.removeEventListener(\"click\", gameRound);\r\n          infoDisplay.textContent = addInfoToDisplay(player1.name);\r\n          const playAgainBtn = document.querySelector(\".play-again-btn\");\r\n          playAgainBtn.disabled = false;\r\n          playAgainBtn.addEventListener(\"click\", () => {\r\n            window.location.reload();\r\n            return false;\r\n          });\r\n          return;\r\n        }\r\n\r\n        infoDisplay.textContent =\r\n          addInfoToDisplay(player2.name, player1.playedSquare) +\r\n          \" \" +\r\n          addInfoToDisplay(player1.name, player2.playedSquare);\r\n        div.removeEventListener(\"click\", gameRound);\r\n        return;\r\n      });\r\n    });\r\n  }\r\n\r\n  function addInfoToDisplay(player, playedSquare = undefined) {\r\n    if (playedSquare === undefined) {\r\n      if (player === player2.name)\r\n        return \"All your opponent's ships sunk. You won!\";\r\n      return \"All your ships ships sunk. Your opponent won!\";\r\n    }\r\n\r\n    const playedDiv = document.querySelector(\r\n      `#${player}-${playedSquare.x}${playedSquare.y}`\r\n    );\r\n\r\n    if (player === player2.name) {\r\n      if (playedDiv.classList.contains(\"sunk\"))\r\n        return \"You sunk one of your opponent's ships.\";\r\n      if (playedDiv.classList.contains(\"ship\"))\r\n        return \"You hit one of your opponent's ships.\";\r\n      return \"You missed.\";\r\n    }\r\n    if (playedDiv.classList.contains(\"sunk\"))\r\n      return \"Your opponent sunk one of your ships.\";\r\n    if (playedDiv.classList.contains(\"ship\"))\r\n      return \"Your opponent hit one of your ships.\";\r\n    return \"Your opponent missed.\";\r\n  }\r\n\r\n  return { player1, player2, addEventToDivs };\r\n}\r\n\r\nexport default game;\r\n","import React, { useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Grid from \"./Grid\";\nimport game from \"../factory/game\";\nimport \"../styles/App.css\";\n\nfunction App() {\n  useEffect(() => {\n    const newGame = game();\n\n    const randomizeBtn = document.querySelector(\".randomize-btn\");\n    randomizeBtn.addEventListener(\"click\", newGame.player1.randomizeBoard);\n\n    const startGameBtn = document.querySelector(\".start-btn\");\n    startGameBtn.addEventListener(\"click\", () => {\n      newGame.addEventToDivs(true);\n      startGameBtn.disabled = true;\n      randomizeBtn.disabled = true;\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"container\">\n        <div className=\"game-container\">\n          <Grid player=\"player1\" description=\"Your grid\" />\n          <Grid player=\"player2\" description=\"Opponent's grid\" />\n        </div>\n        <div className=\"info-container\">\n          <div className=\"info-display\"></div>\n          <div className=\"button-container\">\n            <button type=\"button\" className=\"randomize-btn\">\n              Randomize Grid\n            </button>\n            <button type=\"button\" className=\"start-btn\">\n              Start Game\n            </button>\n            <button type=\"button\" disabled={true} className=\"play-again-btn\">\n              Play Again\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}